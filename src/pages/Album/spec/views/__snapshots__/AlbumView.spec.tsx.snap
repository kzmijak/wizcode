// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`AlbumView > should match snapshot 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <h2>
        Unexpected Application Error!
      </h2>
      <h3
        style="font-style: italic;"
      >
        This component must be used inside a &lt;RecoilRoot&gt; component.
      </h3>
      <pre
        style="padding: 0.5rem; background-color: rgba(200, 200, 200, 0.5);"
      >
        Error: This component must be used inside a &lt;RecoilRoot&gt; component.
    at err (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:22:17)
    at Object.notInAContext (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:4182:9)
    at updateRetainCount (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:3336:21)
    at useRetain_ACTUAL (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:4761:7)
    at useRetain (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:4719:10)
    at Proxy.useRecoilValueLoadable (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:5347:5)
    at Module.useAlbumsFetch (C:\\Users\\kzmij\\Desktop\\wizcode\\src\\modules\\AlbumsState\\src\\hooks\\useAlbumsFetch.ts:8:26)
    at AlbumView (C:\\Users\\kzmij\\Desktop\\wizcode\\src\\pages\\Album\\src\\views\\AlbumView.tsx:10:3)
    at renderWithHooks (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\react-dom\\cjs\\react-dom.development.js:16305:18)
    at mountIndeterminateComponent (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\react-dom\\cjs\\react-dom.development.js:20074:13)
      </pre>
      <p>
        ðŸ’¿ Hey developer ðŸ‘‹
      </p>
      <p>
        You can provide a way better UX than this when your app throws errors by providing your own 
        <code
          style="padding: 2px 4px; background-color: rgba(200, 200, 200, 0.5);"
        >
          ErrorBoundary
        </code>
         or
         
        <code
          style="padding: 2px 4px; background-color: rgba(200, 200, 200, 0.5);"
        >
          errorElement
        </code>
         prop on your route.
      </p>
    </div>
  </body>,
  "container": <div>
    <h2>
      Unexpected Application Error!
    </h2>
    <h3
      style="font-style: italic;"
    >
      This component must be used inside a &lt;RecoilRoot&gt; component.
    </h3>
    <pre
      style="padding: 0.5rem; background-color: rgba(200, 200, 200, 0.5);"
    >
      Error: This component must be used inside a &lt;RecoilRoot&gt; component.
    at err (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:22:17)
    at Object.notInAContext (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:4182:9)
    at updateRetainCount (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:3336:21)
    at useRetain_ACTUAL (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:4761:7)
    at useRetain (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:4719:10)
    at Proxy.useRecoilValueLoadable (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\recoil\\cjs\\index.js:5347:5)
    at Module.useAlbumsFetch (C:\\Users\\kzmij\\Desktop\\wizcode\\src\\modules\\AlbumsState\\src\\hooks\\useAlbumsFetch.ts:8:26)
    at AlbumView (C:\\Users\\kzmij\\Desktop\\wizcode\\src\\pages\\Album\\src\\views\\AlbumView.tsx:10:3)
    at renderWithHooks (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\react-dom\\cjs\\react-dom.development.js:16305:18)
    at mountIndeterminateComponent (C:\\Users\\kzmij\\Desktop\\wizcode\\node_modules\\react-dom\\cjs\\react-dom.development.js:20074:13)
    </pre>
    <p>
      ðŸ’¿ Hey developer ðŸ‘‹
    </p>
    <p>
      You can provide a way better UX than this when your app throws errors by providing your own 
      <code
        style="padding: 2px 4px; background-color: rgba(200, 200, 200, 0.5);"
      >
        ErrorBoundary
      </code>
       or
       
      <code
        style="padding: 2px 4px; background-color: rgba(200, 200, 200, 0.5);"
      >
        errorElement
      </code>
       prop on your route.
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
